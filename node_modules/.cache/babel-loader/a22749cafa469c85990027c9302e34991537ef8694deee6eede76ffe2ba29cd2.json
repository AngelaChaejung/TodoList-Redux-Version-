{"ast":null,"code":"export const ADD_TODO = \"todos/ADD_TODO\";\nexport const TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nexport const DELETE_TODO = \"todos/DELETE_TODO\";\nexport const GET_TODO_BY_ID = \"todos/GET_TODO_BY_ID\";\n//액션생성함수 정의\nexport const deleteTodo = id => ({\n  type: DELETE_TODO,\n  id\n});\nexport const getTodoByID = payload => {\n  return {\n    type: GET_TODO_BY_ID,\n    payload\n  };\n};\nexport const addTodo = todo => ({\n  type: ADD_TODO,\n  todo\n});\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  id\n});\n//기본값\nconst initialState = {\n  // todoList: [\n  //   {\n  //     id: 0,\n  //     title: \"리액트 강의보기\",\n  //     content: \"챕터 1부터 챕터 12까지 학습\",\n  //     isComplete: false,\n  //   },\n  // ],\n  todo: {\n    id: 0,\n    title: \"\",\n    content: \"\",\n    isComplete: false\n  }\n};\n\n//리듀서만들기\nconst todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_TODO:\n      return {\n        todoList: [...state.todoList.filter(todo => todo.id !== action.id)]\n      };\n    case GET_TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todoList.find(todo => {\n          return todo.id === action.payload;\n        })\n      };\n    case ADD_TODO:\n      return {\n        ...state,\n        todoList: [...state.todoList, action.todo]\n      };\n    case TOGGLE_TODO:\n      const _todo = state.todoList.map(todo => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            isComplete: !todo.isComplete\n          };\n        } else {\n          return todo;\n        }\n      });\n      return {\n        ...state,\n        todoList: _todo\n      };\n    default:\n      return state;\n  }\n};\nexport default todos;","map":{"version":3,"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","GET_TODO_BY_ID","deleteTodo","id","type","getTodoByID","payload","addTodo","todo","toggleTodo","initialState","title","content","isComplete","todos","state","action","todoList","filter","find","_todo","map"],"sources":["/Users/angela/Documents/GitHub/TodoList-Redux-Version-/src/redux/modules/todos.js"],"sourcesContent":["export const ADD_TODO = \"todos/ADD_TODO\";\nexport const TOGGLE_TODO = \"todos/TOGGLE_TODO\";\nexport const DELETE_TODO = \"todos/DELETE_TODO\";\nexport const GET_TODO_BY_ID = \"todos/GET_TODO_BY_ID\";\n//액션생성함수 정의\nexport const deleteTodo = (id) => ({\n  type: DELETE_TODO,\n  id,\n});\nexport const getTodoByID = (payload) => {\n  return {\n    type: GET_TODO_BY_ID,\n    payload,\n  };\n};\nexport const addTodo = (todo) => ({\n  type: ADD_TODO,\n  todo,\n});\n\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  id,\n});\n//기본값\nconst initialState = {\n  // todoList: [\n  //   {\n  //     id: 0,\n  //     title: \"리액트 강의보기\",\n  //     content: \"챕터 1부터 챕터 12까지 학습\",\n  //     isComplete: false,\n  //   },\n  // ],\n  todo: {\n    id: 0,\n    title: \"\",\n    content: \"\",\n    isComplete: false,\n  },\n};\n\n//리듀서만들기\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case DELETE_TODO:\n      return {\n        todoList: [...state.todoList.filter((todo) => todo.id !== action.id)],\n      };\n    case GET_TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todoList.find((todo) => {\n          return todo.id === action.payload;\n        }),\n      };\n    case ADD_TODO:\n      return {\n        ...state,\n        todoList: [...state.todoList, action.todo],\n      };\n    case TOGGLE_TODO:\n      const _todo = state.todoList.map((todo) => {\n        if (todo.id === action.id) {\n          return { ...todo, isComplete: !todo.isComplete };\n        } else {\n          return todo;\n        }\n      });\n      return {\n        ...state,\n        todoList: _todo,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,gBAAgB;AACxC,OAAO,MAAMC,WAAW,GAAG,mBAAmB;AAC9C,OAAO,MAAMC,WAAW,GAAG,mBAAmB;AAC9C,OAAO,MAAMC,cAAc,GAAG,sBAAsB;AACpD;AACA,OAAO,MAAMC,UAAU,GAAIC,EAAE,KAAM;EACjCC,IAAI,EAAEJ,WAAW;EACjBG;AACF,CAAC,CAAC;AACF,OAAO,MAAME,WAAW,GAAIC,OAAO,IAAK;EACtC,OAAO;IACLF,IAAI,EAAEH,cAAc;IACpBK;EACF,CAAC;AACH,CAAC;AACD,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCJ,IAAI,EAAEN,QAAQ;EACdU;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAIN,EAAE,KAAM;EACjCC,IAAI,EAAEL,WAAW;EACjBI;AACF,CAAC,CAAC;AACF;AACA,MAAMO,YAAY,GAAG;EACnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAF,IAAI,EAAE;IACJL,EAAE,EAAE,CAAC;IACLQ,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd;AACF,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EACzC,QAAQA,MAAM,CAACZ,IAAI;IACjB,KAAKJ,WAAW;MACd,OAAO;QACLiB,QAAQ,EAAE,CAAC,GAAGF,KAAK,CAACE,QAAQ,CAACC,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKa,MAAM,CAACb,EAAE,CAAC;MACtE,CAAC;IACH,KAAKF,cAAc;MACjB,OAAO;QACL,GAAGc,KAAK;QACRP,IAAI,EAAEO,KAAK,CAACE,QAAQ,CAACE,IAAI,CAAEX,IAAI,IAAK;UAClC,OAAOA,IAAI,CAACL,EAAE,KAAKa,MAAM,CAACV,OAAO;QACnC,CAAC;MACH,CAAC;IACH,KAAKR,QAAQ;MACX,OAAO;QACL,GAAGiB,KAAK;QACRE,QAAQ,EAAE,CAAC,GAAGF,KAAK,CAACE,QAAQ,EAAED,MAAM,CAACR,IAAI;MAC3C,CAAC;IACH,KAAKT,WAAW;MACd,MAAMqB,KAAK,GAAGL,KAAK,CAACE,QAAQ,CAACI,GAAG,CAAEb,IAAI,IAAK;QACzC,IAAIA,IAAI,CAACL,EAAE,KAAKa,MAAM,CAACb,EAAE,EAAE;UACzB,OAAO;YAAE,GAAGK,IAAI;YAAEK,UAAU,EAAE,CAACL,IAAI,CAACK;UAAW,CAAC;QAClD,CAAC,MAAM;UACL,OAAOL,IAAI;QACb;MACF,CAAC,CAAC;MACF,OAAO;QACL,GAAGO,KAAK;QACRE,QAAQ,EAAEG;MACZ,CAAC;IACH;MACE,OAAOL,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}